@model EastMed.Data.Model.location
@using EastMedRepo.Models
@using EastMed.Data.Model;

@{
    ViewBag.Title = "Edit Location";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-header">

    <h5 class="coloremu">
        <i class="ace-icon fa fa-map-marker"></i>
        @ViewBag.Title  of @Model.ROOM_ID
    </h5>
    @*<h4>
            <i class="ace-icon fa fa-angle-double-right"></i>
            @ViewBag.Title
        </h4>*@

</div>


@if (ViewBag.ErrorMessage != null)
{
    <div class="row">
        <div class="col-md-10 col-xs-10 col-lg-10">
            <div class="alert alert-success">
                <button class="close" data-dismiss="alert">
                    <i class="ace-icon fa fa-times"></i>

                </button>
                <strong><i class="ace-icon fa fa-check"></i></strong>
                @ViewBag.ErrorMessage
            </div>
        </div>
    </div>
}


@using (Html.BeginForm())
            {
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-offset-2 col-md-8 col-xs-12 col-lg-8">
            <div class="space"></div>
            <h4 class="header blue bolder smaller">About Location </h4>
            <div class="form-horizontal">
                <fieldset>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.FK_DEPT_ID, htmlAttributes: new { @class = "control-label col-md-3 col-xs-4" })
                        <div class="col-md-4 col-xs-12 col-lg-4">
                            @Html.DropDownList("FK_DEPT_ID", null, htmlAttributes: new { @class = "form-control col-xs-10 col-sm-5 col-md-6" })
                            @Html.ValidationMessageFor(model => model.FK_DEPT_ID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ROOM_ID, htmlAttributes: new { @class = "control-label col-md-3 col-xs-4" })
                        <div class="col-md-4 col-xs-12 col-lg-4">
                            @Html.EditorFor(model => model.ROOM_ID, new { htmlAttributes = new { @class = "form-control col-xs-10 col-sm-5 col-md-6" } })
                            @Html.ValidationMessageFor(model => model.ROOM_ID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TYPE, htmlAttributes: new { @class = "control-label col-xs-4 col-md-3" })
                        <div class="col-md-4 col-xs-12 col-lg-4">
                            <div class="pos-rel">
                                @Html.EditorFor(model => model.TYPE ,new { htmlAttributes = new { @class = "form-control col-xs-10 col-sm-5 col-md-6" , id = "txtType" }  })                              
                                <input type="hidden" id="hfType" name="LocationId" />
                                <br /><br />                               
                                @ViewBag.Message                                                          
                                @Html.ValidationMessageFor(model => model.TYPE, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="space-4"></div>
                    <h4 class="header blue bolder smaller">Date of Location</h4>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CREATED_DATE, htmlAttributes: new { @class = "control-label col-xs-4 col-md-3" })
                        <div class="col-xs-12 col-md-4 col-lg-4">
                            <label class="label label-xlg label-white coloremu">
                                @Html.DisplayFor(model => model.CREATED_DATE)
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.UPDATED_DATE, htmlAttributes: new { @class = "control-label col-xs-4 col-md-3" })
                        <div class="col-xs-12 col-md-4 col-lg-4">
                           
                                @if(String.IsNullOrEmpty(Convert.ToString(Model.UPDATED_DATE)))
                                {
                                    <span class="label label-xlg label-info label-white middle ">Has not been Updated</span>
                                }
                                else
                                {
                                    <span class="label label-xlg label-white coloremu">
                                        @Html.DisplayFor(model => model.UPDATED_DATE)
                                    </span>
                                }
                                   
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-xs-4 col-md-3" })
                        <div class="col-md-4 col-xs-4 col-lg-4">
                            <div class="check-box">
                                <span class="lbl">
                                    @Html.EditorFor(model => model.IsActive, null, new { @class = "ace col-xs-4 col-md-3" })
                                </span>
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <hr />

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @*<button type="submit" value="Save" class="btn btn-primary"><i class="ace-icon fa fa-check"></i>Save Changes</button>*@
                            <input type="submit" id="btnSubmit" value="Submit" class="btn btn-primary" />
                        </div>
                    </div>
                    <div class="space"></div>
                    <h4 class="header blue bolder smaller">Location  Items</h4>
                    <div class="form-group">
                        <div class="pull-left col-md-7 col-md-offset-2 col-xs-12">
                         
                            @Html.ActionLink("Add New Item", "AddItem","Location", new { @id = Model.ID }, new { @class = " btn btn-primary btn-sm" } )

                        </div>
                    </div>

                    @if (Model.location_has_item.Any())
                    {
                        <div class="row">
                            <div class="col-md-8 col-md-offset-2 col-xs-12">
                                <div class="panel panel-primary">
                                    <div class="panel-heading">Items in that Location</div>
                                    <div class="table-responsive">
                                        <table id="dynamic-table2" class="table table-bordered table-striped table-hover ">
                                            <thead>
                                                <tr>
                                                    <th> ITEM NAME</th>
                                                    <th> ITEM QUANTITY </th>
                                                    <th>Process</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.location_has_item)
                                                {
                                                    <tr>
                                                        <td class="col-md-4 col-xs-4 col-lg-4">
                                                            @item.item.ITEM_NAME

                                                        </td>
                                                        <td class="col-md-4 col-xs-4 col-lg-4">

                                                            @item.ItemQuantity
                                                        </td>
                                                       
                                                        <td>
                                                            <a href="@Url.Action("LocationEditItem","Location",new { id = item.ID })"> Edit</a>|                                                           
                                                            <a href="#" id="DeleteItem" data-id="@item.ID"> Delete </a>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="panel panel-primary">
                            <div class="panel-heading">Items in that Location</div>
                            <div class="well well-sm"> This is location does not have any item </div>
                        </div>

                    }

                </fieldset>
            </div>
        </div>
    </div>



}

<hr />
<div>
    @Html.ActionLink("Back to Location List", "Index", null, new { @class = "btn btn-white btn-info" })
</div>


@section scripts
        {

   @Scripts.Render("~/bundles/jqueryval")
<script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
<script src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
@*<link href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css"
      rel="Stylesheet" type="text/css" />*@
<script src="~/Scripts/notify.js"></script>
<script type="text/javascript">

    $(document).on("click", "#DeleteItem", function () {
        returnUser = new Object();
        returnUser.ID = $(this).attr("data-id");

        var deleteTR = $(this).closest("tr");

        swal({
            title: "Item will Delete !",
            text: "Are you sure you want to Delete ?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, Delete",
            closeOnConfirm: true
        },
        function (isConfirm) {
            if (isConfirm) {
                $.ajax({
                    url: '/Location/DeleteItem',
                    type: "POST",
                    data: returnUser,
                    dataType: 'json',
                    success: function (response) {
                        if (response.Success) {
                            $.notify(response.Message, "success", { position: "right" });
                            deleteTR.fadeOut(300, function () {
                                deleteTR.remove();
                            })
                        }
                        else {
                            $.notify(response.Message, "error");
                        }


                    }

                })
            }
        })



    });

        $(function () {
            $("#txtType").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Location/AutoComplete/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#hfType").val(i.item.val);
                },
                minLength: 1
            });
        });
       
</script>

      }