@model EastMed.Data.Model.category

@{
    ViewBag.Title = "Edit Category";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="page-header">
    <h1>
        Edit Category
        <small>
            <i class="ace-icon fa fa-angle-double-right"></i>
            Make Sure that user has a maintanence officer role
        </small>
    </h1>
</div>

@if (TempData["info"] != null)
{
    <div class="row">
        <div class="col-md-10 col-xs-10 col-lg-10">
            <div class="alert alert-success">
                <button class="close" data-dismiss="alert">
                    <i class="ace-icon fa fa-times"></i>

                </button>
                <strong><i class="ace-icon fa fa-check"></i></strong>
                @TempData["info"]
            </div>
        </div>
    </div>
}


@using (Html.BeginForm())
            {
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-offset-2 col-md-8 col-xs-12 col-lg-8">
            <div class="space"></div>
            <h4 class="header blue bolder smaller">Edit @Model.CATEGORY_NAME Category </h4>
            <div class="form-horizontal">
                <fieldset>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.CATEGORY_NAME, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4 col-xs-4 col-lg-4">
                            @Html.EditorFor(model => model.CATEGORY_NAME, new { htmlAttributes = new { @class = "form-control col-xs-10 col-sm-5 col-md-6" } })
                            @Html.ValidationMessageFor(model => model.CATEGORY_NAME, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DESCRIPTION, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4 col-xs-4 col-lg-4">
                            @Html.EditorFor(model => model.DESCRIPTION, new { htmlAttributes = new { @class = "form-control col-xs-10 col-sm-5 col-md-6" } })
                            @Html.ValidationMessageFor(model => model.DESCRIPTION, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FK_USER_ID, "Responsible User", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4 col-xs-4 col-lg-4">
                            @Html.DropDownList("FK_USER_ID", null, htmlAttributes: new { @class = "form-control col-xs-10 col-sm-5 col-md-6" })
                            @Html.ValidationMessageFor(model => model.FK_USER_ID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4 col-xs-4 col-lg-4">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsActive)
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save Changes" class="btn btn-primary" />
                        </div>
                    </div>
                </fieldset>

            </div>

        </div>
    </div>
                   

}
<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-white btn-info" })
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
